{"pageProps":{"postData":{"id":"ripping-games","contentHtml":"<h2>Sega Saturn</h2>\n<h3>Converting from MDF/MDS</h3>\n<p>Some of my Sega Saturn discs are ripped as MDF (Media Descriptor File) and MDS (Media Descriptor Sidecar) filetypes. These are common as rips from Alcohol 120%, a classic Windows program used for ripping and burning discs. Some modern emulators do not handle these filetyles so it can be worthwhile to convert to other formats for compatibility. I've been targeting <a href=\"https://docs.libretro.com/library/beetle_saturn/\">Beetle Saturn</a> which is still maintained but does not support MDF/MDS.</p>\n<h4>Converting to ISO</h4>\n<p>First install <a href=\"https://github.com/ropery/iat\">iat</a>, a free utility tool that can convert disc formats to ISO.</p>\n<p>In Ubuntu:</p>\n<p><code>sudo apt-get install iat</code></p>\n<p>Converting your MDF/MDS filepair is as simple as running the tool against the MDF file:</p>\n<p><code>iat INPUT_FILE.mdf OUTPUTFILE.iso</code></p>\n<p>Once it has completed you will have an ISO formatted disc file per your output argument. After this I would recommend converting to a <code>.chd</code> file (see \"Converting to CHD below\").</p>\n<h2>Sony PlayStation</h2>\n<p>PlayStation emulators typically require the PlayStation disc image to be in a bin/cue format. The <code>.bin</code> file contains the binary content of the disc and the <code>.cue</code> contains directions for loading the data for the hardware reading the disc. In our case the hardware is virtualized within the emulator.</p>\n<h3>Prerequisites</h3>\n<p>There's only a few tools we need for ripping a PSX disc: a CD drive to read the disc and a CLI called <code>cdrdao</code>.</p>\n<h4>CD drive</h4>\n<p>The disc contents will be read through a physical CD drive. I've tested these instructions using an <a href=\"https://a.co/d/3YAR4WD\">LG Ultra-Slim Portable DVD Burner</a>, but most general purpose CD drives should work.</p>\n<h4>Software</h4>\n<p>We'll be using <a href=\"https://cdrdao.sourceforge.net/\">cdrdao</a> for ripping the discs, a CLI for reading and writing discs in a \"disk-at-once\" mode. You can install <code>cdrdao</code> with your favorite package manager. For reference, I have installed the program on both macOS and Ubuntu.</p>\n<h5>macOS</h5>\n<p><code>brew install cdrdao</code></p>\n<h5>Ubuntu</h5>\n<p><code>sudo apt install cdrdao</code></p>\n<h3>Ripping a disc to bin &#x26; cue files</h3>\n<p>First you will need to insert your PSX disc into your CD drive. Once it has spun up and mounted the disc to your filesystem we will begin by unmounting it. This is slightly different based on your operating system.</p>\n<pre><code># Linux (Ubuntu)\n$ df\n$ sudo umount **DISK_LOCATION**\n\n# macOS\n$ diskutil list\n$ diskutil unmountDisk **DISK_LOCATION**\n</code></pre>\n<p>The <code>**DISK_LOCATION**</code> parameter should be replaced with the location of your disk drive per the results of the list command. On my installation of Ubuntu the CD was mounted to <code>/dev/sr0</code>.</p>\n<p>Now we can begin reading and dumping the contents of the disc to a file:</p>\n<pre><code>cdrdao read-cd --read-raw --datafile GAMENAME.bin --driver generic-mmc GAMENAME.toc\n</code></pre>\n<p>The <code>GAMENAME</code> value can be whatever value you decide, so preferably the name of the game you are ripping.</p>\n<p>You'll begin to see some results in the console as the disc is ripped. The length of the process depends on the read speed of your disk drive, but for reference this only took a few minutes with my USB DVD drive.</p>\n<p>If all goes well you will see two files in the directory where you ran the command: <code>GAMENAME.bin</code> and <code>GAMENAME.toc</code>. The <code>.toc</code> file is very similar to the <code>.cue</code> file we need as it describes the contents of the disc. <code>cdrdao</code> installs with a useful tool for this conversion called <code>toc2cue</code>. Running the following command will generate the <code>.cue</code> file needed:</p>\n<p><code>toc2cue GAMENAME.toc GAMENAME.cue</code></p>\n<p>Now you should be able to load the game in your PSX emulator of choice by loading its <code>.cue</code> file.</p>\n<h3>Troubleshooting</h3>\n<h4>L-EC errors</h4>\n<p>If your disc is damaged, or even just has smudges on it, the ripping process may appear to go very slowly and not finish correctly. If you are seeing errors such as <code>WARNING: Found L-EC error at sector 814 - ignored</code> you may need to wipe your disc clean or try to repair any damages to it.</p>\n<h2>Sony PlayStation 2</h2>\n<p>Ripping PS2 DVDs is often a much simpler process depending on the game. After inserting your PS2 disc into your disc drive a good first place to start is to use the built in <code>dd</code> utility on macOS and Linux:</p>\n<pre><code># List mounted drives\ndf\n\ndd if=/dev/*DISK_LOCATION* of=~/cdrom_image.bin status=progress\n</code></pre>\n<p>where <code>*DISK_LOCATION*</code> is the location of the PS2 disc found after running <code>df</code>.</p>\n<p>This will produce a <code>.bin</code> file with the binary data of the disc. You will need a simple <code>.cue</code> file which could be generated by hand or using a utility. Duckstation provides a handy web tool for this: <a href=\"https://www.duckstation.org/cue-maker/\">PlayStation (PSX) Cue Maker</a>.</p>\n<p>While <code>.bin/.cue</code> is preferable, an <code>.iso</code> file will also work with most emulators and does not require a <code>.cue</code>. The second command stays the same except <code>.bin</code> is replaced with <code>.iso</code>:</p>\n<p><code>dd if=/dev/*DISK_LOCATION* of=~/cdrom_image.iso status=progress</code></p>\n<h1>Converting to CHD</h1>\n<p>I highly recommend converting any disc data to the <code>.chd</code> format to simplify your backups and save space with compression:</p>\n<blockquote>\n<p>CHD is a lossless compression format originally developed for MAME, for the hard-drive contents of certain arcade machines. It has since been used in several other emulators as a means of storing CD-ROM game data. For CD-based games, it compresses the contents of a disc image (.cue + .bin files) to a single .chd file.</p>\n<p>-- <a href=\"https://retropie.org.uk/docs/CHD-files/\">CHD files - RetroPie Docs</a></p>\n</blockquote>\n<p><code>.chd</code> has great compatibility across the most popular emulators, I've been using it specifically with:</p>\n<ul>\n<li>redream (Dreamcast)</li>\n<li>flycast (Dreamcast)</li>\n<li>Duckstation (PS1)</li>\n<li>Yaba Sanshiro 2 (Sega Saturn)</li>\n<li>Beetle Saturn (Sega Saturn)</li>\n</ul>\n<h2>Setup</h2>\n<p>Follow the guide posted above for installing <code>rom-tools</code> (macOS) or <code>mame-tools</code> (Linux). After installing a <code>chdman</code> command should be available:</p>\n<pre><code>$ chdman info\nchdman - MAME Compressed Hunks of Data (CHD) manager 0.242 (unknown)\nError: Required parameters missing\n\nUsage:\n   chdman info [options], where valid options are:\n      --input, -i &#x3C;filename>: input file name (required)\n      --verbose, -v: output additional information\n</code></pre>\n<p><code>chdman</code> works with many filetypes but I've been using it specifically for PSX, Saturn, and Dreamcast backups. This includes <code>.bin/.cue</code> and <code>.gdi</code> formats.</p>\n<h2>.bin/.cue</h2>\n<p>CUE files are plaintext files that define how the \"tracks\" of the disc are laid out. Opening a CUE file will show that its contents are simple: references to the other files in the disc and their index. The CHD docs provides examples on how to use the tool but I'll be reproducing those here. Pointing <code>chdman</code> at a <code>.cue</code> file will use this info to create the single <code>.chd</code> file:</p>\n<p><code>chdman createcd -i &#x3C;game.cue> -o &#x3C;game.chd></code></p>\n<p>Alternatively you can convert many files in a single command like:</p>\n<p><code>for i in *.cue; do chdman createcd -i \"$i\" -o \"${i%.*}.chd\"; done</code></p>\n<h2>.gdi</h2>\n<p><code>chdman</code> works exactly the same with Dreamcast <code>.gdi</code> images, where instead of pointing at the <code>.cue</code> you reference the <code>.gdi</code> file:</p>\n<p><code>chdman createcd -i &#x3C;game.gdi> -o &#x3C;game.chd></code></p>\n<p>Alternatively you can convert many files in a single command like:</p>\n<p><code>for i in *.gdi; do chdman createcd -i \"$i\" -o \"${i%.*}.chd\"; done</code></p>\n","title":"Ripping Games","subtitle":"How to rip, format, and archive game discs for emulation and preservation.","date":"2023-01-27"}},"__N_SSG":true}